// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonInterestAPI.Data;

#nullable disable

namespace SUT23_Labb_3_API.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    partial class PersonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonInterestAPI.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Creating software applications",
                            Title = "Programming"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Playing video games",
                            Title = "Gaming"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Reading books and articles",
                            Title = "Reading"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Playing sports",
                            Title = "Sports"
                        });
                });

            modelBuilder.Entity("PersonInterestAPI.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("PersonInterestId")
                        .HasColumnType("int")
                        .HasColumnName("PersonInterestId");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.HasIndex("PersonInterestId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonInterestId = 1,
                            URL = "https://docs.microsoft.com/en-us/dotnet/csharp/"
                        },
                        new
                        {
                            Id = 2,
                            PersonInterestId = 1,
                            URL = "https://www.udemy.com/topic/programming-languages/"
                        },
                        new
                        {
                            Id = 3,
                            PersonInterestId = 2,
                            URL = "https://store.steampowered.com/"
                        },
                        new
                        {
                            Id = 4,
                            PersonInterestId = 3,
                            URL = "https://www.goodreads.com/"
                        },
                        new
                        {
                            Id = 5,
                            PersonInterestId = 4,
                            URL = "https://www.nba.com/"
                        },
                        new
                        {
                            Id = 6,
                            PersonInterestId = 4,
                            URL = "https://www.fifa.com/"
                        });
                });

            modelBuilder.Entity("PersonInterestAPI.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Smith",
                            PhoneNumber = "987654321"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Michael Johnson",
                            PhoneNumber = "5555555555"
                        });
                });

            modelBuilder.Entity("PersonInterestAPI.Models.PersonInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InterestId = 1,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            InterestId = 3,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 3,
                            InterestId = 2,
                            PersonId = 2
                        },
                        new
                        {
                            Id = 4,
                            InterestId = 4,
                            PersonId = 2
                        },
                        new
                        {
                            Id = 5,
                            InterestId = 1,
                            PersonId = 3
                        },
                        new
                        {
                            Id = 6,
                            InterestId = 4,
                            PersonId = 3
                        });
                });

            modelBuilder.Entity("PersonInterestAPI.Models.Link", b =>
                {
                    b.HasOne("PersonInterestAPI.Models.Interest", null)
                        .WithMany("Links")
                        .HasForeignKey("InterestId");

                    b.HasOne("PersonInterestAPI.Models.PersonInterest", "PersonInterest")
                        .WithMany("Links")
                        .HasForeignKey("PersonInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonInterest");
                });

            modelBuilder.Entity("PersonInterestAPI.Models.PersonInterest", b =>
                {
                    b.HasOne("PersonInterestAPI.Models.Interest", "Interest")
                        .WithMany("PersonInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonInterestAPI.Models.Person", "Person")
                        .WithMany("PersonInterests")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PersonInterestAPI.Models.Interest", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("PersonInterests");
                });

            modelBuilder.Entity("PersonInterestAPI.Models.Person", b =>
                {
                    b.Navigation("PersonInterests");
                });

            modelBuilder.Entity("PersonInterestAPI.Models.PersonInterest", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
